CREATE TYPE "public"."relation_type" AS ENUM('AND', 'OR');
CREATE TYPE "public"."restriction_type" AS ENUM('INCLUDE', 'EXCLUDE');
CREATE TYPE "public"."user_course_status" AS ENUM('taken', 'planning');
CREATE TABLE "account" (
	"userId" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"providerAccountId" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "account_provider_providerAccountId_pk" PRIMARY KEY("provider","providerAccountId")
);

CREATE TABLE "antirequisites" (
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"antirequisite_department" varchar(10) NOT NULL,
	"antirequisite_course_number" varchar(10) NOT NULL,
	CONSTRAINT "antirequisites_department_course_number_antirequisite_department_antirequisite_course_number_pk" PRIMARY KEY("department","course_number","antirequisite_department","antirequisite_course_number")
);

CREATE TABLE "corequisites" (
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"corequisite_department" varchar(10) NOT NULL,
	"corequisite_course_number" varchar(10) NOT NULL,
	CONSTRAINT "corequisites_department_course_number_corequisite_department_corequisite_course_number_pk" PRIMARY KEY("department","course_number","corequisite_department","corequisite_course_number")
);

CREATE TABLE "course_prerequisites" (
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"root_node_id" integer NOT NULL,
	CONSTRAINT "course_prerequisites_department_course_number_pk" PRIMARY KEY("department","course_number")
);

CREATE TABLE "course_program_restrictions" (
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"program" varchar(50) NOT NULL,
	"min_level" varchar(5),
	"restriction_type" "restriction_type" NOT NULL,
	CONSTRAINT "course_program_restrictions_department_course_number_program_pk" PRIMARY KEY("department","course_number","program")
);

CREATE TABLE "courses" (
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"title" text,
	"description" text,
	"requirements" text,
	"units" real,
	"min_level" varchar(5),
	"fall" boolean DEFAULT false NOT NULL,
	"winter" boolean DEFAULT false NOT NULL,
	"spring" boolean DEFAULT false NOT NULL,
	CONSTRAINT "courses_department_course_number_pk" PRIMARY KEY("department","course_number")
);

CREATE TABLE "post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"createdById" varchar(255) NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);

CREATE TABLE "prerequisite_nodes" (
	"id" serial PRIMARY KEY NOT NULL,
	"parent_id" integer,
	"relation_type" "relation_type",
	"department" varchar(10),
	"course_number" varchar(10),
	"min_grade" integer
);

CREATE TABLE "session" (
	"sessionToken" varchar(255) PRIMARY KEY NOT NULL,
	"userId" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);

CREATE TABLE "user_courses" (
	"user_id" varchar(255) NOT NULL,
	"department" varchar(10) NOT NULL,
	"course_number" varchar(10) NOT NULL,
	"status" "user_course_status" NOT NULL,
	"level_term" varchar(5),
	CONSTRAINT "user_courses_pk" PRIMARY KEY("user_id","department","course_number")
);

CREATE TABLE "user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"emailVerified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);

CREATE TABLE "verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);

ALTER TABLE "account" ADD CONSTRAINT "account_userId_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."user"("id") ON DELETE no action ON UPDATE no action;
ALTER TABLE "course_prerequisites" ADD CONSTRAINT "course_prerequisites_root_node_id_prerequisite_nodes_id_fk" FOREIGN KEY ("root_node_id") REFERENCES "public"."prerequisite_nodes"("id") ON DELETE cascade ON UPDATE no action;
ALTER TABLE "post" ADD CONSTRAINT "post_createdById_user_id_fk" FOREIGN KEY ("createdById") REFERENCES "public"."user"("id") ON DELETE no action ON UPDATE no action;
ALTER TABLE "prerequisite_nodes" ADD CONSTRAINT "prerequisite_nodes_parent_id_prerequisite_nodes_id_fk" FOREIGN KEY ("parent_id") REFERENCES "public"."prerequisite_nodes"("id") ON DELETE cascade ON UPDATE no action;
ALTER TABLE "session" ADD CONSTRAINT "session_userId_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."user"("id") ON DELETE no action ON UPDATE no action;
ALTER TABLE "user_courses" ADD CONSTRAINT "user_courses_course_fk" FOREIGN KEY ("department","course_number") REFERENCES "public"."courses"("department","course_number") ON DELETE cascade ON UPDATE no action;
ALTER TABLE "user_courses" ADD CONSTRAINT "user_courses_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."user"("id") ON DELETE cascade ON UPDATE no action;
CREATE INDEX "account_user_id_idx" ON "account" USING btree ("userId");
CREATE INDEX "idx_antirequisites_department_course" ON "antirequisites" USING btree ("department","course_number");
CREATE INDEX "idx_antirequisites_antidept_anticourse" ON "antirequisites" USING btree ("antirequisite_department","antirequisite_course_number");
CREATE INDEX "idx_course_prerequisites_root_node_id" ON "course_prerequisites" USING btree ("root_node_id");
CREATE INDEX "created_by_idx" ON "post" USING btree ("createdById");
CREATE INDEX "name_idx" ON "post" USING btree ("name");
CREATE INDEX "idx_prerequisite_nodes_dept_course" ON "prerequisite_nodes" USING btree ("department","course_number");
CREATE INDEX "idx_prerequisite_nodes_parent_id" ON "prerequisite_nodes" USING btree ("parent_id");
CREATE INDEX "t_user_id_idx" ON "session" USING btree ("userId");
